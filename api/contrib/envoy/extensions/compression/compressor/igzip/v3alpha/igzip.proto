syntax = "proto3";

package envoy.extensions.compression.compressor.igzip.v3alpha;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.compression.compressor.igzip.v3alpha";
option java_outer_classname = "IgzipProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/compression/compressor/igzip/v3alpha";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Igzip Compressor]
// [#extension: envoy.compression.compressor.igzip]

// [#next-free-field: 5]
message Igzip {

  enum CompressionLevel {
    option allow_alias = true;

    DEFAULT_COMPRESSION = 0;
    BEST_SPEED = 1;
    COMPRESSION_LEVEL_1 = 1;
    COMPRESSION_LEVEL_2 = 2;
    COMPRESSION_LEVEL_3 = 3;
    BEST_COMPRESSION = 3;
  }

  // Value from 1 to 5 that controls the amount of internal memory. Higher values
  // use more memory, but are faster and produce better compression results. The default value is 5.
  google.protobuf.UInt32Value memory_level = 1 [(validate.rules).uint32 = {lte: 5 gte: 1}];

  // A value used for selecting the compression level. This setting will affect speed and
  // amount of compression applied to the content. "BEST_COMPRESSION" provides higher compression
  // at the cost of higher latency and is equal to "COMPRESSION_LEVEL_3". "BEST_SPEED" provides
  // lower compression with minimum impact on response time, the same as "COMPRESSION_LEVEL_1".
  // "DEFAULT_COMPRESSION" provides an optimal result between speed and compression, the same as "COMPRESSION_LEVEL_2".
  // This field will be set to "DEFAULT_COMPRESSION" if not specified.
  CompressionLevel compression_level = 2 [(validate.rules).enum = {defined_only: true}];

  // Value from 0 to 15 that represents the base two logarithmic of the compressor's window size.
  // Larger window results in better compression at the expense of memory usage. The default is 15.
  google.protobuf.UInt32Value window_bits = 3 [(validate.rules).uint32 = {lte: 15 gte: 0}];

  // Value for Zlib's next output buffer. If not set, defaults to 4096.
  // See https://www.zlib.net/manual.html for more details. Also see
  // https://github.com/envoyproxy/envoy/issues/8448 for context on this filter's performance.
  google.protobuf.UInt32Value chunk_size = 4 [(validate.rules).uint32 = {lte: 65536 gte: 4096}];
}
